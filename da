import React, { useRef, useState } from "react";
import { Link } from "react-router-dom";
import Table from "../../../../core/common/dataTable/index";
import { exam } from "../../../../core/data/json/exam";
import { examOne, examtwo, startTime, startTimeOne } from "../../../../core/common/selectoption/selectoption";
import PredefinedDateRanges from "../../../../core/common/datePicker";
import CommonSelect from "../../../../core/common/commonSelect";
import { DatePicker } from "antd";
import dayjs from "dayjs";
import { all_routes } from "../../../router/all_routes";
import TooltipOption from "../../../../core/common/tooltipOption";

const Exam = () => {
  const routes = all_routes;

  const [exams, setExams] = useState(() => {
    const storedExams = localStorage.getItem('exams');
    return storedExams ? JSON.parse(storedExams) : exam;
  });

  const dropdownMenuRef = useRef<HTMLDivElement | null>(null);
  const today = dayjs();
  
  const [newExam, setNewExam] = useState({
    examName: '',
    examDate: today,
    startTime: '',
    endTime: ''
  });

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setNewExam(prevState => ({ ...prevState, [name]: value }));
  };

  const handleDateChange = (date: dayjs.Dayjs | null) => {
    setNewExam(prev => ({ ...prev, examDate: date || today }));
  };

  const handleAddExam = (e: React.FormEvent) => {
    e.preventDefault();
    
    const updatedExams = [
      ...exams,
      { 
        ...newExam, 
        id: exams.length + 1, 
        examDate: newExam.examDate.format('DD-MM-YYYY') 
      }
    ];

    setExams(updatedExams);
    localStorage.setItem('exams', JSON.stringify(updatedExams));
    setNewExam({ examName: '', examDate: today, startTime: '', endTime: '' });
  };

  const handleApplyClick = () => {
    if (dropdownMenuRef.current) {
      dropdownMenuRef.current.classList.remove("show");
    }
  };

  const columns = [
    {
      title: "ID",
      dataIndex: "id",
      render: (text: string, record: any) => (
        <Link to="#" className="link-primary">{record.id}</Link>
      ),
      sorter: (a: any, b: any) => a.id - b.id,
    },
    {
      title: "Exam Name",
      dataIndex: "examName",
      sorter: (a: any, b: any) => a.examName.localeCompare(b.examName),
    },
    {
      title: "Exam Date",
      dataIndex: "examDate",
      render: (date: any) => dayjs(date, 'DD-MM-YYYY').format('DD-MM-YYYY'),
      sorter: (a: any, b: any) => dayjs(a.examDate, 'DD-MM-YYYY').unix() - dayjs(b.examDate, 'DD-MM-YYYY').unix(),
    },
    {
      title: "Start Time",
      dataIndex: "startTime",
      sorter: (a: any, b: any) => a.startTime.localeCompare(b.startTime),
    },
    {
      title: "End Time",
      dataIndex: "endTime",
      sorter: (a: any, b: any) => a.endTime.localeCompare(b.endTime),
    },
    {
      title: "Action",
      dataIndex: "action",
      render: () => (
        <div className="d-flex align-items-center">
          <div className="dropdown">
            <Link to="#" className="btn btn-white btn-icon btn-sm" data-bs-toggle="dropdown">
              <i className="ti ti-dots-vertical fs-14" />
            </Link>
            <ul className="dropdown-menu dropdown-menu-right p-3">
              <li>
                <Link className="dropdown-item rounded-1" to="#" data-bs-toggle="modal" data-bs-target="#edit_exam">
                  <i className="ti ti-edit-circle me-2" /> Edit
                </Link>
              </li>
              <li>
                <Link className="dropdown-item rounded-1" to="#" data-bs-toggle="modal" data-bs-target="#delete-modal">
                  <i className="ti ti-trash-x me-2" /> Delete
                </Link>
              </li>
            </ul>
          </div>
        </div>
      ),
    },
  ];

  return (
    <div>
      <div className="page-wrapper">
        <div className="content">
          <div className="d-md-flex d-block align-items-center justify-content-between mb-3">
            <div className="my-auto mb-2">
              <h3 className="page-title mb-1">Exam</h3>
              <nav>
                <ol className="breadcrumb mb-0">
                  <li className="breadcrumb-item"><Link to={routes.adminDashboard}>Dashboard</Link></li>
                  <li className="breadcrumb-item"><Link to="#">Academic</Link></li>
                  <li className="breadcrumb-item active" aria-current="page">Exam</li>
                </ol>
              </nav>
            </div>
            <div className="d-flex my-xl-auto right-content align-items-center flex-wrap">
              <TooltipOption />
              <div className="mb-2">
                <Link to="#" className="btn btn-primary" data-bs-toggle="modal" data-bs-target="#add_exam">
                  <i className="ti ti-square-rounded-plus-filled me-2" /> Add Exam
                </Link>
              </div>
            </div>
          </div>

          <div className="card">
            <div className="card-header d-flex align-items-center justify-content-between flex-wrap pb-0">
              <h4 className="mb-3">Exam List</h4>
              <div className="d-flex align-items-center flex-wrap">
                <div className="input-icon-start mb-3 me-2 position-relative">
                  <PredefinedDateRanges />
                </div>
                <div className="dropdown mb-3 me-2">
                  <Link to="#" className="btn btn-outline-light bg-white dropdown-toggle" data-bs-toggle="dropdown">
                    <i className="ti ti-filter me-2" /> Filter
                  </Link>
                  <div className="dropdown-menu drop-width" ref={dropdownMenuRef}>
                    <form>
                      <div className="d-flex align-items-center border-bottom p-3">
                        <h4>Filter</h4>
                      </div>
                      <div className="p-3 border-bottom pb-0">
                        <div className="row">
                          <div className="col-md-12 mb-3">
                            <label className="form-label">Exam Name</label>
                            <CommonSelect className="select" options={examtwo} />
                          </div>
                          <div className="col-md-12 mb-3">
                            <label className="form-label">Exam Date</label>
                            <CommonSelect className="select" options={examOne} />
                          </div>
                        </div>
                      </div>
                      <div className="p-3 d-flex align-items-center justify-content-end">
                        <Link to="#" className="btn btn-light me-3">Reset</Link>
                        <Link to="#" className="btn btn-primary" onClick={handleApplyClick}>Apply</Link>
                      </div>
                    </form>
                  </div>
                </div>
                <div className="dropdown mb-3">
                  <Link to="#" className="btn btn-outline-light bg-white dropdown-toggle" data-bs-toggle="dropdown">
                    <i className="ti ti-sort-ascending-2 me-2" /> Sort by A-Z
                  </Link>
                  <ul className="dropdown-menu p-3">
                    <li><Link to="#" className="dropdown-item rounded-1 active">Ascending</Link></li>
                    <li><Link to="#" className="dropdown-item rounded-1">Descending</Link></li>
                    <li><Link to="#" className="dropdown-item rounded-1">Recently Viewed</Link></li>
                    <li><Link to="#" className="dropdown-item rounded-1">Recently Added</Link></li>
                  </ul>
                </div>
              </div>
            </div>
            <div className="card-body p-0 py-3">
              <Table columns={columns} dataSource={exams} Selection={true} />
            </div>
          </div>
        </div>
      </div>

      {/* Add Exam Modal */}
      <div className="modal fade" id="add_exam">
        <div className="modal-dialog modal-dialog-centered">
          <div className="modal-content">
            <div className="modal-header">
              <h4 className="modal-title">Add Exam</h4>
              <button type="button" className="btn-close" data-bs-dismiss="modal" aria-label="Close" />
            </div>
            <form onSubmit={handleAddExam}>
              <div className="modal-body">
                <div className="row">
                  <div className="col-md-12">
                    <div className="mb-3">
                      <label className="form-label">Exam Name</label>
                      <input
                        type="text"
                        className="form-control"
                        name="examName"
                        value={newExam.examName}
                        onChange={handleInputChange}
                        required
                      />
                    </div>
                    <div className="mb-3">
                      <label className="form-label">Exam Date</label>
                      <DatePicker
                        className="form-control"
                        format="DD-MM-YYYY"
                        value={newExam.examDate}
                        onChange={handleDateChange}
                        required
                      />
                    </div>
                    <div className="mb-3">
                      <label className="form-label">Start Time</label>
                      <CommonSelect
                        className="select"
                        options={startTime}
                        onChange={(selectedValue) => {
                          setNewExam(prev => ({ ...prev, startTime: selectedValue?.value || '' }));
                        }}
                        required
                      />
                    </div>
                    <div className="mb-0">
                      <label className="form-label">End Time</label>
                      <CommonSelect
                        className="select"
                        options={startTimeOne}
                        onChange={(selectedValue) => {
                          setNewExam(prev => ({ ...prev, endTime: selectedValue?.value || '' }));
                        }}
                        required
                      />
                    </div>
                  </div>
                </div>
              </div>
              <div className="modal-footer">
                <Link to="#" className="btn btn-light me-2" data-bs-dismiss="modal">Cancel</Link>
                <button type="submit" className="btn btn-primary" data-bs-dismiss="modal">Add Exam</button>
              </div>
            </form>
          </div>
        </div>
      </div>

      {/* Other modals for editing and deleting exams can go here */}
    </div>
  );
};

export default Exam;
