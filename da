// DualistBox.js
import React, { useState } from 'react';
import styled from 'styled-components';

const Container = styled.div`
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
`;

const Box = styled.div`
  width: 200px;
  height: 200px;
  margin: 20px;
  display: flex;
  justify-content: center;
  align-items: center;
  border: 2px solid #333;
  background-color: ${props => (props.isActive ? '#4caf50' : '#f44336')};
  color: white;
  font-size: 24px;
  transition: background-color 0.3s;
  cursor: pointer;

  &:hover {
    opacity: 0.9;
  }
`;

const DualistBox = () => {
  const [activeBox, setActiveBox] = useState(null);
  const [permissions, setPermissions] = useState({
    box1: 'No Access',
    box2: 'No Access',
  });

  const handleDoubleClick = (boxId) => {
    setActiveBox(prev => (prev === boxId ? null : boxId));
    
    setPermissions(prev => ({
      ...prev,
      [boxId === 1 ? 'box1' : 'box2']: prev[boxId === 1 ? 'box1' : 'box2'] === 'Access Granted' ? 'No Access' : 'Access Granted',
    }));
  };

  return (
    <Container>
      <Box
        isActive={activeBox === 1}
        onDoubleClick={() => handleDoubleClick(1)}
      >
        {permissions.box1}
      </Box>
      <Box
        isActive={activeBox === 2}
        onDoubleClick={() => handleDoubleClick(2)}
      >
        {permissions.box2}
      </Box>
    </Container>
  );
};

export default DualistBox;
