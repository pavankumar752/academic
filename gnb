import React, { useEffect, useRef, useState } from "react";
import PredefinedDateRanges from "../../../../core/common/datePicker";
import {
  classSection,
  classSylabus,
  count,
  durationOne,
  examOne,
  examtwo,
  maxMark,
  minMark,
  mothertongue,
  startTime,
  startTimeOne,
} from "../../../../core/common/selectoption/selectoption";
import Select from "react-select";
import { Link } from "react-router-dom";
import Table from "../../../../core/common/dataTable/index";
import { examSchedule } from "../../../../core/data/json/exam_schedule";
import { TableData } from "../../../../core/data/interface";
import CommonSelect from "../../../../core/common/commonSelect";
import { all_routes } from "../../../router/all_routes";
import TooltipOption from "../../../../core/common/tooltipOption";
interface Option {
  label: string;
  value: string
}

interface Exam1 {
  subject: Option | null;
  section: Option | null;
  examDate: Option | null;
  startTime: Option | null;
  endTime: Option | null;
  duration: Option | null;
  roomNo: Option | null;
  maxMarks: Option | null;
  minMarks: Option | null;
  class: "",
  examName: Option | null,
  key: number;

}

const ExamSchedule = () => {
  const routes = all_routes;
  const [data, setData] = useState<Exam1[]>([
  ]);
  const dropdownMenuRef = useRef<HTMLDivElement | null>(null);
  const [formValues, setFormValues] = useState<Exam1>({
    subject: null,
    examDate: null,
    startTime: null,
    section:null,
    endTime: null,
    duration: null,
    roomNo: null,
    maxMarks: null,
    minMarks: null,
    key: data.length,
    examName: null,
    class: "",
  });
  const handleInputChange = (name: string, value: Option | null) => {
    setFormValues((prevValues) => ({
      ...prevValues,
      [name]: value,
    }));
  };
  const classSection: Option[] = [
    { label: "Class A", value: "classA" },
    { label: "Class B", value: "classB" },
  ];

  const examNames: Option[] = [
    { label: "Midterm", value: "midterm" },
    { label: "Final", value: "final" },
  ];

  const subjects: Option[] = [
    { label: "Math", value: "math" },
    { label: "Science", value: "science" },
  ];

  const roomNumbers: Option[] = [
    { label: "Room 101", value: "room101" },
    { label: "Room 102", value: "room102" },
  ];
  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    setData([...data, { ...formValues, key: data.length }]);
    // Reset form values after adding
    setFormValues({
      subject: null,
    examDate: null,
    startTime: null,
    endTime: null,
    duration: null,
    roomNo: null,
    maxMarks: null,
    minMarks: null,
    examName: null,
    class: "",
    section:null,
    key: data.length,
    });
  };

  const handleApplyClick = () => {
    if (dropdownMenuRef.current) {
      dropdownMenuRef.current.classList.remove("show");
    }
  };
  const [newContents, setNewContents] = useState<number[]>([0]);
  const columns = [
    {
      title: "Subject",
      dataIndex: "subject",
      render: (text: string, record: any, index: number) => (
        <>
          <Link to="#" className="link-primary">
            {record.subject}
          </Link>
        </>
      ),
      sorter: (a: TableData, b: TableData) =>
        a.subject.length - b.subject.length,
    },
    {
      title: "Exam Date",
      dataIndex: "examDate",
      sorter: (a: TableData, b: TableData) =>
        a.examDate.length - b.examDate.length,
    },
    {
      title: "Start Time",
      dataIndex: "startTime",
      sorter: (a: TableData, b: TableData) =>
        a.startTime.length - b.startTime.length,
    },
    {
      title: "End Time",
      dataIndex: "endTime",
      sorter: (a: TableData, b: TableData) =>
        a.endTime.length - b.endTime.length,
    },
    {
      title: "Duration",
      dataIndex: "duration",
      sorter: (a: TableData, b: TableData) =>
        a.duration.length - b.duration.length,
    },
    {
      title: "Room No",
      dataIndex: "roomNo",
      sorter: (a: TableData, b: TableData) => a.roomNo.length - b.roomNo.length,
    },
    {
      title: "Max Mark",
      dataIndex: "maxMarks",
      sorter: (a: TableData, b: TableData) =>
        a.maxMarks.length - b.maxMarks.length,
    },
    {
      title: "Min Mark",
      dataIndex: "minMarks",
      sorter: (a: TableData, b: TableData) =>
        a.minMarks.length - b.minMarks.length,
    },
    {
      title: "Action",
      dataIndex: "action",
      render: () => (
        <>
          <div className="d-flex align-items-center">
            <div className="dropdown">
              <Link
                to="#"
                className="btn btn-white btn-icon btn-sm d-flex align-items-center justify-content-center rounded-circle p-0"
                data-bs-toggle="dropdown"
                aria-expanded="false"
              >
                <i className="ti ti-dots-vertical fs-14" />
              </Link>
              <ul className="dropdown-menu dropdown-menu-right p-3">
                <li>
                  <Link
                    className="dropdown-item rounded-1"
                    to="#"
                    data-bs-toggle="modal"
                    data-bs-target="#edit_exam_schedule"
                  >
                    <i className="ti ti-edit-circle me-2" />
                    Edit
                  </Link>
                </li>
                <li>
                  <Link
                    className="dropdown-item rounded-1"
                    to="#"
                    data-bs-toggle="modal"
                    data-bs-target="#delete-modal"
                  >
                    <i className="ti ti-trash-x me-2" />
                    Delete
                  </Link>
                </li>
              </ul>
            </div>
          </div>
        </>
      ),
    },
  ];
  const addNewContent = () => {
    setNewContents([...newContents, newContents.length]);
  };
  const removeContent = (index:any) => {
    setNewContents(newContents.filter((_, i) => i !== index));
  };
  return (
    <div>
      <div className="page-wrapper">
        <div className="content">
          {/* Page Header */}
          <div className="d-md-flex d-block align-items-center justify-content-between mb-3">
            <div className="my-auto mb-2">
              <h3 className="page-title mb-1">Exam Schedule</h3>
              <nav>
                <ol className="breadcrumb mb-0">
                  <li className="breadcrumb-item">
                    <Link to={routes.adminDashboard}>Dashboard</Link>
                  </li>
                  <li className="breadcrumb-item">
                    <Link to="#">Academic </Link>
                  </li>
                  <li className="breadcrumb-item active" aria-current="page">
                    Exam Schedule
                  </li>
                </ol>
              </nav>
            </div>
            <div className="d-flex my-xl-auto right-content align-items-center flex-wrap">
            <TooltipOption />
              <div className="mb-2">
                <Link
                  to="#"
                  className="btn btn-primary"
                  data-bs-toggle="modal"
                  data-bs-target="#add_exam_schedule"
                >
                  <i className="ti ti-square-rounded-plus-filled me-2" />
                  Add Exam Schedule
                </Link>
              </div>
            </div>
          </div>
          {/* /Page Header */}
          {/* Guardians List */}
          <div className="card">
            <div className="card-header d-flex align-items-center justify-content-between flex-wrap pb-0">
              <h4 className="mb-3">Exam Schedule</h4>
              <div className="d-flex align-items-center flex-wrap">
                <div className="input-icon-start mb-3 me-2 position-relative">
                  <PredefinedDateRanges />
                </div>
                <div className="dropdown mb-3 me-2">
                  <Link
                    to="#"
                    className="btn btn-outline-light bg-white dropdown-toggle"
                    data-bs-toggle="dropdown"
                    data-bs-auto-close="outside"
                  >
                    <i className="ti ti-filter me-2" />
                    Filter
                  </Link>
                  <div className="dropdown-menu drop-width"  ref={dropdownMenuRef}>
                    <form >
                      <div className="d-flex align-items-center border-bottom p-3">
                        <h4>Filter</h4>
                      </div>
                      <div className="p-3 border-bottom pb-0">
                        <div className="row">
                          <div className="col-md-12">
                            <div className="mb-3">
                              <label className="form-label">Class 1-A</label>
                              <CommonSelect
                                className="select"
                                options={classSylabus}
                              />
                            </div>
                          </div>
                          <div className="col-md-12">
                            <div className="mb-3">
                              <label className="form-label">Exam Date</label>
                              <CommonSelect
                                className="select"
                                options={examOne}
                              />
                            </div>
                          </div>
                        </div>
                      </div>
                      <div className="p-3 d-flex align-items-center justify-content-end">
                        <Link to="#" className="btn btn-light me-3">
                          Reset
                        </Link>
                        <Link
                          to="#"
                          className="btn btn-primary"
                          onClick={handleApplyClick}
                        >
                          Apply
                        </Link>
                      </div>
                    </form>
                  </div>
                </div>
                <div className="dropdown mb-3">
                  <Link
                    to="#"
                    className="btn btn-outline-light bg-white dropdown-toggle"
                    data-bs-toggle="dropdown"
                  >
                    <i className="ti ti-sort-ascending-2 me-2" />
                    Sort by A-Z
                  </Link>
                  <ul className="dropdown-menu p-3">
                    <li>
                      <Link to="#" className="dropdown-item rounded-1 active">
                        Ascending
                      </Link>
                    </li>
                    <li>
                      <Link to="#" className="dropdown-item rounded-1">
                        Descending
                      </Link>
                    </li>
                    <li>
                      <Link to="#" className="dropdown-item rounded-1">
                        Recently Viewed
                      </Link>
                    </li>
                    <li>
                      <Link to="#" className="dropdown-item rounded-1">
                        Recently Added
                      </Link>
                    </li>
                  </ul>
                </div>
              </div>
            </div>
            <div className="card-body p-0 py-3">
              {/* Guardians List */}
              <Table columns={columns} dataSource={data} Selection={true} />

              {/* /Guardians List */}
            </div>
          </div>
          {/* /Guardians List */}
        </div>
      </div>
      <>
        {/* Add Exam Schedule */}
        <div className="modal fade" id="add_exam_schedule">
  <div className="modal-dialog modal-dialog-centered modal-xl">
    <div className="modal-content">
      <div className="modal-header">
        <h4 className="modal-title">Add Exam Schedule</h4>
        <button
          type="button"
          className="btn-close custom-btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        >
          <i className="ti ti-x" />
        </button>
      </div>
      <form onSubmit={handleSubmit}>
        <div className="modal-body">
          <div className="row">
            <div className="col-md-12">
              <div className="row">
                <div className="col-md-4">
                  <div className="mb-3">
                    <label className="form-label">Class</label>
                    <input
                      type="text"
                      className="form-control"
                      name="class"
                      value={formValues.class}
                      onChange={(e) => handleInputChange("class", { label: e.target.value, value: e.target.value })}
                    />
                  </div>
                </div>
                <div className="col-md-4">
                  <div className="mb-3">
                    <label className="form-label">Section</label>
                    <CommonSelect
                      className="select"
                      options={classSection}
                      value={formValues.section}
                      onChange={(selectedOption) => handleInputChange("section", selectedOption)}
                    />
                  </div>
                </div>
                <div className="col-md-4">
                  <div className="mb-3">
                    <label className="form-label">Exam Name</label>
                    <CommonSelect
                      className="select"
                      options={examtwo}
                      value={formValues.examName}
                      onChange={(selectedOption) => handleInputChange("examName", selectedOption)}
                    />
                  </div>
                </div>
                <div className="col-md-4">
                  <div className="mb-3">
                    <label className="form-label">Start Time</label>
                    <CommonSelect
                      className="select"
                      options={startTime}
                      value={formValues.startTime}
                      onChange={(selectedOption) => handleInputChange("startTime", selectedOption)}
                    />
                  </div>
                </div>
                <div className="col-md-4">
                  <div className="mb-3">
                    <label className="form-label">End Time</label>
                    <CommonSelect
                      className="select"
                      options={startTimeOne}
                      value={formValues.endTime}
                      onChange={(selectedOption) => handleInputChange("endTime", selectedOption)}
                    />
                  </div>
                </div>
                <div className="col-md-4">
                  <div className="mb-3">
                    <label className="form-label">Duration (min)</label>
                    <CommonSelect
                      className="select"
                      options={durationOne}
                      value={formValues.duration}
                      onChange={(selectedOption) => handleInputChange("duration", selectedOption)}
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div className="exam-schedule-add">
            <div className="exam-schedule-row d-flex align-items-center flex-wrap column-gap-3">
              <div className="shedule-info flex-fill">
                <div className="mb-3">
                  <label className="form-label">Exam Date</label>
                  <CommonSelect
                    className="select"
                    options={examOne}
                    value={formValues.examDate}
                    onChange={(selectedOption) => handleInputChange("examDate", selectedOption)}
                  />
                </div>
              </div>
              <div className="shedule-info flex-fill">
                <div className="mb-3">
                  <label className="form-label">Subject</label>
                  <CommonSelect
                    className="select"
                    options={mothertongue}
                    value={formValues.subject}
                    onChange={(selectedOption) => handleInputChange("subject", selectedOption)}
                  />
                </div>
              </div>
              <div className="shedule-info flex-fill">
                <div className="mb-3">
                  <label className="form-label">Room No</label>
                  <CommonSelect
                    className="select"
                    options={count}
                    value={formValues.roomNo}
                    onChange={(selectedOption) => handleInputChange("roomNo", selectedOption)}
                  />
                </div>
              </div>
              <div className="shedule-info flex-fill">
                <div className="mb-3">
                  <label className="form-label">Max Marks</label>
                  <CommonSelect
                    className="select"
                    options={maxMark}
                    value={formValues.maxMarks}
                    onChange={(selectedOption) => handleInputChange("maxMarks", selectedOption)}
                  />
                </div>
              </div>
              <div className="shedule-info flex-fill">
                <div className="d-flex align-items-end">
                  <div className="mb-3 flex-fill">
                    <label className="form-label">Min Marks</label>
                    <CommonSelect
                      className="select"
                      options={minMark}
                      value={formValues.minMarks}
                      onChange={(selectedOption) => handleInputChange("minMarks", selectedOption)}
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div className="modal-footer">
          <Link to="#" className="btn btn-light me-2" data-bs-dismiss="modal">Cancel</Link>
          <button type="submit" className="btn btn-primary" data-bs-dismiss="modal">Add Exam Schedule</button>
        </div>
      </form>
    </div>
  </div>
</div>
