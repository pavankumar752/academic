const ExamForm = ({ onSubmit, initialValues }) => {
  const validationSchema = Yup.object().shape({
    class: Yup.string().required('Class is required'),
    examName: Yup.string().required('Exam name is required'),
    startTime: Yup.string().required('Start time is required'),
    endTime: Yup.string().required('End time is required'),
    duration: Yup.number().required('Duration is required').positive().integer(),
  });

  return (
    <Formik
      initialValues={initialValues}
      validationSchema={validationSchema}
      onSubmit={onSubmit}
    >
      {() => (
        <Form>
          <div className="modal-body">
            <div className="row">
              <div className="col-md-12">
                <div className="row">
                  {['class', 'section', 'examName', 'startTime', 'endTime', 'duration'].map((field, index) => (
                    <div className="col-md-4" key={index}>
                      <div className="mb-3">
                        <label className="form-label">{field.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}</label>
                        <Field name={field} as={field === 'section' || field === 'examName' ? CommonSelect : 'input'} className="form-control" options={field === 'section' ? classSection : field === 'examName' ? examtwo : undefined} />
                        <ErrorMessage name={field} component="div" className="text-danger" />
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
          <div className="modal-footer">
            <Link to="#" className="btn btn-light me-2" data-bs-dismiss="modal">Cancel</Link>
            <button type="submit" className="btn btn-primary">Add Exam Schedule</button>
          </div>
        </Form>
      )}
    </Formik>
  );
};

const ExamSchedule = () => {
  const initialValues = {
    class: '',
    section: '',
    examName: '',
    startTime: '',
    endTime: '',
    duration: '',
  };

  const handleAddExamSchedule = (values) => {
    console.log('Exam Schedule Added:', values);
    // Handle submission logic here
  };
