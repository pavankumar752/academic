import React, { useEffect, useRef, useState } from "react";
import { Link } from "react-router-dom";
import Table from "../../../../core/common/dataTable/index";
import { TableData } from "../../../../core/data/interface";
import { all_routes } from "../../../router/all_routes";

const ExamSchedule = () => {
  const routes = all_routes;
  const dropdownMenuRef = useRef<HTMLDivElement | null>(null);
  const [examList, setExamList] = useState<TableData[]>([]);

  // Load exams from local storage on component mount
  useEffect(() => {
    const storedExams = localStorage.getItem("examList");
    if (storedExams) {
      setExamList(JSON.parse(storedExams));
    }
  }, []);

  // Save exams to local storage whenever examList changes
  useEffect(() => {
    localStorage.setItem("examList", JSON.stringify(examList));
  }, [examList]);

  const handleApplyClick = () => {
    if (dropdownMenuRef.current) {
      dropdownMenuRef.current.classList.remove("show");
    }
  };

  const addNewExam = (newExam: TableData) => {
    setExamList((prev) => [...prev, newExam]);
  };

  const removeExam = (index: number) => {
    setExamList((prev) => prev.filter((_, i) => i !== index));
  };

  const columns = [
    {
      title: "Subject",
      dataIndex: "subject",
      render: (text: string, record: TableData) => (
        <Link to="#" className="link-primary">
          {record.subject}
        </Link>
      ),
      sorter: (a: TableData, b: TableData) =>
        a.subject.length - b.subject.length,
    },
    // Add other column definitions similar to the original code
    {
      title: "Action",
      dataIndex: "action",
      render: (_, record, index) => (
        <div className="d-flex align-items-center">
          <div className="dropdown">
            <Link
              to="#"
              className="btn btn-white btn-icon btn-sm d-flex align-items-center justify-content-center rounded-circle p-0"
              data-bs-toggle="dropdown"
              aria-expanded="false"
            >
              <i className="ti ti-dots-vertical fs-14" />
            </Link>
            <ul className="dropdown-menu dropdown-menu-right p-3">
              <li>
                <Link
                  className="dropdown-item rounded-1"
                  to="#"
                  onClick={() => {
                    // Edit functionality can be implemented here
                  }}
                >
                  <i className="ti ti-edit-circle me-2" />
                  Edit
                </Link>
              </li>
              <li>
                <Link
                  className="dropdown-item rounded-1"
                  to="#"
                  onClick={() => removeExam(index)}
                >
                  <i className="ti ti-trash-x me-2" />
                  Delete
                </Link>
              </li>
            </ul>
          </div>
        </div>
      ),
    },
  ];

  return (
    <div>
      {/* Add your table and other UI components here */}
      <Table data={examList} columns={columns} />
    </div>
  );
};

export default ExamSchedule;
