const columns = [
    {
      title: "Admission No",
      dataIndex: "admissionNo",
      render: (text: string, record: any, index: number) => (
        <>
          <Link to="#" className="link-primary">
            {record.admissionNo}
          </Link>
        </>
      ),
      sorter: (a: TableData, b: TableData) => a.admissionNo.length - b.admissionNo.length,
    },

    {
      title: "Student Name",
      dataIndex: "studentName",
      render: (text: string, record: any) => (
        <div className="d-flex align-items-center">
            <Link to={routes.studentDetail} className="avatar avatar-md">
                <ImageWithBasePath
                    src={record.img}
                    className="img-fluid rounded-circle"
                    alt="img"
                />
            </Link>
            <div className="ms-2">
                <p className="text-dark mb-0">
                
                    <Link to={routes.studentDetail}>{text}</Link>
                </p>
                <span className="fs-12">{record.roll}</span>
            </div>
        </div>
    ),
      sorter: (a: TableData, b: TableData) => a.studentName.length - b.studentName.length,
    },
    {
      title: "English",
      dataIndex: "english",
      render: (text: string, record: any, index: number) => (
        <>
          <input
          type="number"
          value={text}
          onChange={(e) => handleInputChange(index, 'english', e.target.value)}
          className={`form-control ${text === "30" ? "text-danger" : ""}`}
        />
        </>
      ),
      sorter: (a: TableData, b: TableData) => a.english.length - b.english.length,
    },
    {
      title: "Spanish",
      dataIndex: "spanish",
      render: (text: string, record: any, index: number) => (
        <>
          <input
          type="number"
          //value={text}
          onChange={(e) => handleInputChange(index, 'spanish', e.target.value)}
          className={`form-control ${text === "30" ? "text-danger" : ""}`}
        />
        </>
      ),
      sorter: (a: TableData, b: TableData) => a.spanish.length - b.spanish.length,
    },
    {
      title: "Physics",
      dataIndex: "physics",
      render: (text: string, record: any, index: number) => (
        <>
          <input
          type="number"
          //value={text}
          onChange={(e) => handleInputChange(index, 'physics', e.target.value)}
          className={`form-control ${text === "30" ? "text-danger" : ""}`}
        />
        </>
      ),
      sorter: (a: TableData, b: TableData) => a.physics.length - b.physics.length,
    },
    {
      title: "Chemistry",
      dataIndex: "chemistry",
      render: (text: string, record: any, index: number) => (
        <>
          <input
          type="number"
          //value={text}
          onChange={(e) => handleInputChange(index, 'chemistry', e.target.value)}
          className={`form-control ${text === "30" ? "text-danger" : ""}`}
        />
        </>
      ),
      sorter: (a: TableData, b: TableData) => a.chemistry.length - b.chemistry.length,
    },
    {
      title: "Maths",
      dataIndex: "maths",
      render: (text: string, record: any, index: number) => (
        <>
          <input
          type="number"
          //value={text}
          onChange={(e) => handleInputChange(index, 'maths', e.target.value)}
          className={`form-control ${text === "30" ? "text-danger" : ""}`}
        />
        </>
      ),
      sorter: (a: TableData, b: TableData) => a.maths.length - b.maths.length,
    },
    {
      title: "Computer",
      dataIndex: "computer",
      render: (text: string, record: any, index: number) => (
        <>
          <input
          type="number"
          //value={text}
          onChange={(e) => handleInputChange(index, 'computer', e.target.value)}
          className={`form-control ${text === "30" ? "text-danger" : ""}`}
        />
        </>
      ),
      
      sorter: (a: TableData, b: TableData) => a.computer.length - b.computer.length,
    },
    {
      title: "Env Science",
      dataIndex: "envScience",
      render: (text: string, record: any, index: number) => (
        <>
          <input
          type="number"
          //value={text}
          onChange={(e) => handleInputChange(index, 'envScience', e.target.value)}
          className={`form-control ${text === "30" ? "text-danger" : ""}`}
        />
        </>
      ),
      sorter: (a: TableData, b: TableData) => a.envScience.length - b.envScience.length,
    },
    {
      title: "Total",
      //dataIndex: "total",
      sorter: (a: TableData, b: TableData) => a.total.length - b.total.length,
    },
    {
      title: "Percent",
      //dataIndex: "percent",
      sorter: (a: TableData, b: TableData) => a.percent.length - b.percent.length,
    },
    {
      title: "Grade",
      //dataIndex: "grade",
      sorter: (a: TableData, b: TableData) => a.grade.length - b.grade.length,
    },
    {
      title: "Result",
      dataIndex: "Pass",
      render: (text: string) => (
        <>
          {text === "Pass" ? (
            <span className="badge badge-soft-success d-inline-flex align-items-center">
              <i className="ti ti-circle-filled fs-5 me-1"></i>
              {text}
            </span>
          ) : (
            <span className="badge badge-soft-danger d-inline-flex align-items-center">
              <i className="ti ti-circle-filled fs-5 me-1"></i>
              {text}
            </span>
          )}
        </>
      ),
      sorter: (a: TableData, b: TableData) => a.result.length - b.result.length,
    }
   
  ];
