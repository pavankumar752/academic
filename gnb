import React, { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import Table from "../../../../core/common/dataTable/index";
import { DatePicker } from "antd";
import dayjs from "dayjs";
import CommonSelect, { Option } from "../../../../core/common/commonSelect";

interface Exam1 {
  id: string;
  key: number;
  examName: string;
  examDate: string;
  startTime: string;
  endTime: string;
}

const Exam = () => {
  const [data, setData] = useState<Exam1[]>([]);
  const [newExam, setNewExam] = useState({
    examName: "",
    examDate: dayjs().format("DD-MM-YYYY"),
    startTime: "",
    endTime: "",
  });
  const [editExam, setEditExam] = useState<Exam1 | null>(null);

  useEffect(() => {
    const storedExams = localStorage.getItem('exams');
    if (storedExams) {
      setData(JSON.parse(storedExams));
    }
  }, []);

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setNewExam({ ...newExam, [name]: value });
  };

  const handleAddExam = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    const examWithId: Exam1 = {
      id: String(data.length + 1),
      key: data.length + 1,
      ...newExam,
    };
    const updatedData = [...data, examWithId];
    setData(updatedData);
    localStorage.setItem('exams', JSON.stringify(updatedData));
    setNewExam({ examName: "", examDate: dayjs().format("DD-MM-YYYY"), startTime: "", endTime: "" });
  };

  const handleEditExamSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    if (editExam) {
      const updatedData = data.map((exam) =>
        exam.id === editExam.id ? { ...exam, ...editExam } : exam
      );
      setData(updatedData);
      localStorage.setItem('exams', JSON.stringify(updatedData));
      setEditExam(null); // Close the modal
    }
  };

  const openEditModal = (exam: Exam1) => {
    setEditExam(exam);
  };

  const columns = [
    {
      title: "ID",
      dataIndex: "id",
      render: (text: string) => (
        <Link to="#" className="link-primary">{text}</Link>
      ),
      sorter: (a: Exam1, b: Exam1) => a.id.localeCompare(b.id),
    },
    {
      title: "Exam Name",
      dataIndex: "examName",
      sorter: (a: Exam1, b: Exam1) => a.examName.localeCompare(b.examName),
    },
    {
      title: "Exam Date",
      dataIndex: "examDate",
      sorter: (a: Exam1, b: Exam1) => dayjs(a.examDate, "DD-MM-YYYY").diff(dayjs(b.examDate, "DD-MM-YYYY")),
    },
    {
      title: "Start Time",
      dataIndex: "startTime",
    },
    {
      title: "End Time",
      dataIndex: "endTime",
    },
    {
      title: "Action",
      render: (_: any, record: Exam1) => (
        <div className="d-flex align-items-center">
          <Link
            to="#"
            className="btn btn-white btn-icon btn-sm"
            onClick={() => openEditModal(record)}
          >
            Edit
          </Link>
          {/* Add delete functionality here if needed */}
        </div>
      ),
    },
  ];

  return (
    <div>
      <h3 className="page-title mb-1">Exam</h3>
      <Table columns={columns} dataSource={data} />

      {/* Add Exam Modal */}
      <div className="modal fade" id="add_exam">
        <div className="modal-dialog modal-dialog-centered">
          <div className="modal-content">
            <div className="modal-header">
              <h4 className="modal-title">Add Exam</h4>
              <button type="button" className="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form onSubmit={handleAddExam}>
              <div className="modal-body">
                <div className="mb-3">
                  <label className="form-label">Exam Name</label>
                  <input
                    type="text"
                    className="form-control"
                    name="examName"
                    value={newExam.examName}
                    onChange={handleInputChange}
                    required
                  />
                </div>
                <div className="mb-3">
                  <label className="form-label">Exam Date</label>
                  <DatePicker
                    className="form-control"
                    format={"DD-MM-YYYY"}
                    value={dayjs(newExam.examDate, "DD-MM-YYYY")}
                    onChange={(date) => setNewExam({ ...newExam, examDate: dayjs(date).format("DD-MM-YYYY") })}
                  />
                </div>
                <div className="mb-3">
                  <label className="form-label">Start Time</label>
                  <CommonSelect
                    options={startTime} // Ensure 'startTime' is defined
                    onChange={(option: Option | null) => setNewExam({ ...newExam, startTime: option ? option.value : "" })}
                  />
                </div>
                <div className="mb-0">
                  <label className="form-label">End Time</label>
                  <CommonSelect
                    options={startTimeOne} // Ensure 'startTimeOne' is defined
                    onChange={(option: Option | null) => setNewExam({ ...newExam, endTime: option ? option.value : "" })}
                  />
                </div>
              </div>
              <div className="modal-footer">
                <Link to="#" className="btn btn-light" data-bs-dismiss="modal">Cancel</Link>
                <button type="submit" className="btn btn-primary">Add Exam</button>
              </div>
            </form>
          </div>
        </div>
      </div>

      {/* Edit Exam Modal */}
      <div className="modal fade" id="edit_exam">
        <div className="modal-dialog modal-dialog-centered">
          <div className="modal-content">
            <div className="modal-header">
              <h4 className="modal-title">Edit Exam</h4>
              <button type="button" className="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form onSubmit={handleEditExamSubmit}>
              <div className="modal-body">
                {editExam && (
                  <>
                    <div className="mb-3">
                      <label className="form-label">Exam Name</label>
                      <input
                        type="text"
                        className="form-control"
                        name="examName"
                        value={editExam.examName}
                        onChange={(e) => setEditExam({ ...editExam, examName: e.target.value })}
                        required
                      />
                    </div>
                    <div className="mb-3">
                      <label className="form-label">Exam Date</label>
                      <DatePicker
                        className="form-control"
                        format={"DD-MM-YYYY"}
                        value={dayjs(editExam.examDate, "DD-MM-YYYY")}
                        onChange={(date) => setEditExam({ ...editExam, examDate: dayjs(date).format("DD-MM-YYYY") })}
                      />
                    </div>
                    <div className="mb-3">
                      <label className="form-label">Start Time</label>
                      <CommonSelect
                        options={startTime}
                        onChange={(option: Option | null) => setEditExam({ ...editExam, startTime: option ? option.value : "" })}
                      />
                    </div>
                    <div className="mb-0">
                      <label className="form-label">End Time</label>
                      <CommonSelect
                        options={startTimeOne}
                        onChange={(option: Option | null) => setEditExam({ ...editExam, endTime: option ? option.value : "" })}
                      />
                    </div>
                  </>
                )}
              </div>
              <div className="modal-footer">
                <Link to="#" className="btn btn-light" data-bs-dismiss="modal">Cancel</Link>
                <button type="submit" className="btn btn-primary">Save Changes</button>
              </div>
            </form>
          </div>
        </div>
      </div>

      {/* Delete Exam Modal */}
      <div className="modal fade" id="delete-modal">
        <div className="modal-dialog modal-dialog-centered">
          <div className="modal-content">
            <div className="modal-body text-center">
              <i className="ti ti-trash-x fs-50 my-3 text-danger" />
              <h4>Are you sure you want to delete this exam?</h4>
              <div className="d-flex justify-content-center">
                <Link className="btn btn-light me-3" to="#" data-bs-dismiss="modal">Cancel</Link>
                <Link className="btn btn-primary" to="#" data-bs-dismiss="modal">Delete</Link>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Exam;
