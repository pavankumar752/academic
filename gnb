import React, { useState } from "react";

// Define the Option interface
interface Option {
  label: string;
  value: string;
}

// Define the Exam1 interface
interface Exam1 {
  subject: Option | null;
  examDate: Option | null;
  startTime: Option | null;
  endTime: Option | null;
  duration: Option | null;
  roomNo: Option | null;
  maxMarks: Option | null;
  minMarks: Option | null;
  class: Option | null; // Ensure this is defined
  key: number;
}

const ExamSchedule: React.FC = () => {
  const [formValues, setFormValues] = useState<Exam1>({
    subject: null,
    examDate: null,
    startTime: null,
    endTime: null,
    duration: null,
    roomNo: null,
    maxMarks: null,
    minMarks: null,
    class: null,
    key: 0,
  });

  const handleInputChange = (name: string, value: Option | null) => {
    setFormValues((prevValues) => ({
      ...prevValues,
      [name]: value,
    }));
  };

  // Example dropdown options (replace with your actual data)
  const classSection: Option[] = [
    { label: "Class A", value: "classA" },
    { label: "Class B", value: "classB" },
  ];

  const handleSubmit = (event: React.FormEvent) => {
    event.preventDefault();
    // Handle form submission
    console.log(formValues);
  };

  return (
    <div>
      <h1>Exam Schedule</h1>
      <form onSubmit={handleSubmit}>
        {/* Example Select for Subject */}
        <select
          className="form-control"
          name="subject"
          value={formValues.subject ? formValues.subject.value : ""}
          onChange={(e) => {
            const selectedOption = classSection.find(option => option.value === e.target.value) || null;
            handleInputChange("subject", selectedOption);
          }}
        >
          <option value="">Select Subject</option>
          {classSection.map(option => (
            <option key={option.value} value={option.value}>
              {option.label}
            </option>
          ))}
        </select>

        {/* Add similar select components for other fields */}
        {/* Example for class */}
        <select
          className="form-control"
          name="class"
          value={formValues.class ? formValues.class.value : ""}
          onChange={(e) => {
            const selectedOption = classSection.find(option => option.value === e.target.value) || null;
            handleInputChange("class", selectedOption);
          }}
        >
          <option value="">Select Class</option>
          {classSection.map(option => (
            <option key={option.value} value={option.value}>
              {option.label}
            </option>
          ))}
        </select>

        <button type="submit">Submit</button>
      </form>
    </div>
  );
};

export default ExamSchedule;
