import React, { useRef, useState, useEffect } from "react";
import { Link } from "react-router-dom";
import Table from "../../../../core/common/dataTable/index";
import { exam } from "../../../../core/data/json/exam"; // Assuming this is the sample data.
import {
  examOne,
  examtwo,
  startTime,
  startTimeOne,
} from "../../../../core/common/selectoption/selectoption";
import PredefinedDateRanges from "../../../../core/common/datePicker";
import CommonSelect from "../../../../core/common/commonSelect";
import { DatePicker } from "antd";
import dayjs from "dayjs";
import { all_routes } from "../../../router/all_routes";
import TooltipOption from "../../../../core/common/tooltipOption";

interface Exam {
  id: number;
  examName: string;
  examDate: string;
  startTime: string;
  endTime: string;
}

const Exam = () => {
  const routes = all_routes;

  const [data, setData] = useState<Exam[]>([]);
  const [editingExam, setEditingExam] = useState<Exam | null>(null);
  const dropdownMenuRef = useRef<HTMLUListElement | null>(null); // Type assertion added
  const today = new Date();
  const defaultValue = dayjs(today);

  const handleAddExam = (examData: Omit<Exam, 'id'>) => {
    setData((prevData) => [...prevData, { id: Date.now(), ...examData }]);
  };

  const handleEditExam = (updatedExam: Exam) => {
    setData((prevData) =>
      prevData.map((exam) => (exam.id === updatedExam.id ? updatedExam : exam))
    );
    setEditingExam(null);
  };

  const handleDeleteExam = (id: number) => {
    setData((prevData) => prevData.filter((exam) => exam.id !== id));
  };

  const handleApplyClick = () => {
    if (dropdownMenuRef.current) {
      dropdownMenuRef.current.classList.remove("show");
    }
  };

  const getModalContainer = () => {
    const modalElement = document.getElementById("modal-datepicker");
    return modalElement ? modalElement : document.body;
  };

  const columns = [
    {
      title: "ID",
      dataIndex: "id",
      render: (text: string, record: Exam) => (
        <Link to="#" className="link-primary">
          {record.id}
        </Link>
      ),
      sorter: (a: Exam, b: Exam) => a.id - b.id,
    },
    {
      title: "Exam Name",
      dataIndex: "examName",
      sorter: (a: Exam, b: Exam) => a.examName.length - b.examName.length,
    },
    {
      title: "Exam Date",
      dataIndex: "examDate",
      sorter: (a: Exam, b: Exam) => a.examDate.length - b.examDate.length,
    },
    {
      title: "Start Time",
      dataIndex: "startTime",
      sorter: (a: Exam, b: Exam) => a.startTime.length - b.startTime.length,
    },
    {
      title: "End Time",
      dataIndex: "endTime",
      sorter: (a: Exam, b: Exam) => a.endTime.length - b.endTime.length,
    },
    {
      title: "Action",
      dataIndex: "action",
      render: (_: any, record: Exam) => (
        <div className="d-flex align-items-center">
          <div className="dropdown">
            <Link
              to="#"
              className="btn btn-white btn-icon btn-sm d-flex align-items-center justify-content-center rounded-circle p-0"
              data-bs-toggle="dropdown"
              aria-expanded="false"
            >
              <i className="ti ti-dots-vertical fs-14" />
            </Link>
            <ul className="dropdown-menu dropdown-menu-right p-3">
              <li>
                <Link
                  className="dropdown-item rounded-1"
                  to="#"
                  onClick={() => setEditingExam(record)}
                  data-bs-toggle="modal"
                  data-bs-target="#edit_exam"
                >
                  <i className="ti ti-edit-circle me-2" />
                  Edit
                </Link>
              </li>
              <li>
                <Link
                  className="dropdown-item rounded-1"
                  to="#"
                  onClick={() => handleDeleteExam(record.id)}
                  data-bs-toggle="modal"
                  data-bs-target="#delete-modal"
                >
                  <i className="ti ti-trash-x me-2" />
                  Delete
                </Link>
              </li>
            </ul>
          </div>
        </div>
      ),
    },
  ];

  const handleSubmitAddExam = (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    const form = event.target as HTMLFormElement;
    const newExam = {
      examName: form.examName.value,
      examDate: form.examDate.value,
      startTime: form.startTime.value,
      endTime: form.endTime.value,
    };
    handleAddExam(newExam);
    form.reset();
  };

  const handleSubmitEditExam = (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    if (!editingExam) return;
    const form = event.target as HTMLFormElement;
    const updatedExam = {
      ...editingExam,
      examName: form.examName.value,
      examDate: form.examDate.value,
      startTime: form.startTime.value,
      endTime: form.endTime.value,
    };
    handleEditExam(updatedExam);
  };

  return (
    <div>
      <div className="page-wrapper">
        <div className="content">
          <div className="d-md-flex d-block align-items-center justify-content-between mb-3">
            <div className="my-auto mb-2">
              <h3 className="page-title mb-1">Exam</h3>
              <nav>
                <ol className="breadcrumb mb-0">
                  <li className="breadcrumb-item">
                    <Link to={routes.adminDashboard}>Dashboard</Link>
                  </li>
                  <li className="breadcrumb-item">
                    <Link to="#">Academic </Link>
                  </li>
                  <li className="breadcrumb-item active" aria-current="page">
                    Exam
                  </li>
                </ol>
              </nav>
            </div>
            <div className="d-flex my-xl-auto right-content align-items-center flex-wrap">
              <TooltipOption />
              <div className="mb-2">
                <Link
                  to="#"
                  className="btn btn-primary"
                  data-bs-toggle="modal"
                  data-bs-target="#add_exam"
                >
                  <i className="ti ti-square-rounded-plus-filled me-2" />
                  Add Exam
                </Link>
              </div>
            </div>
          </div>
          <div className="card">
            <div className="card-header d-flex align-items-center justify-content-between flex-wrap pb-0">
              <h4 className="mb-3">Exam List</h4>
              <div className="d-flex align-items-center flex-wrap">
                <div className="input-icon-start mb-3 me-2 position-relative">
                  <PredefinedDateRanges />
                </div>
                <div className="dropdown mb-3 me-2">
                  <Link
                    to="#"
                    className="btn btn-outline-light bg-white dropdown-toggle"
                    data-bs-toggle="dropdown"
                    data-bs-auto-close="outside"
                  >
                    <i className="ti ti-filter me-2" />
                    Filter
                  </Link>
                  <div className="dropdown-menu drop-width" ref={dropdownMenuRef}>
                    <form>
                      <div className="d-flex align-items-center border-bottom p-3">
                        <h4>Filter</h4>
                      </div>
                      <div className="p-3 border-bottom pb-0">
                        <div className="row">
                          <div className="col-md-12">
                            <div className="mb-3">
                              <label className="form-label">Exam Name</label>
                              <CommonSelect
                                className="select"
                                options={examtwo}
                              />
                            </div>
                          </div>
                          <div className="col-md-12">
                            <div className="mb-3">
                              <label className="form-label">Exam Date</label>
                              <CommonSelect
                                className="select"
                                options={examOne}
                              />
                            </div>
                          </div>
                        </div>
                      </div>
                      <div className="p-3 d-flex align-items-center justify-content-end">
                        <Link to="#" className="btn btn-light me-3">
                          Reset
                        </Link>
                        <Link
                          to="#"
                          className="btn btn-primary"
                          onClick={handleApplyClick}
                        >
                          Apply
                        </Link>
                      </div>
                    </form>
                  </div>
                </div>
                <DatePicker
                  format="YYYY-MM-DD"
                  defaultValue={defaultValue} // Default value added here
                  getPopupContainer={getModalContainer}
                />
              </div>
            </div>
            <div className="card-body">
              <Table columns={columns} data={data} />
            </div>
          </div>
        </div>
      </div>
      {/* Add Exam Modal */}
      <div
        className="modal fade"
        id="add_exam"
        tabIndex={-1}
        aria-labelledby="add_examLabel"
        aria-hidden="true"
      >
        <div className="modal-dialog">
          <div className="modal-content">
            <div className="modal-header">
              <h5 className="modal-title" id="add_examLabel">
                Add Exam
              </h5>
              <button
                type="button"
                className="btn-close"
                data-bs-dismiss="modal"
                aria-label="Close"
              />
            </div>
            <form onSubmit={handleSubmitAddExam}>
              <div className="modal-body">
                <div className="mb-3">
                  <label className="form-label">Exam Name</label>
                  <input
                    type="text"
                    name="examName"
                    className="form-control"
                    required
                  />
                </div>
                <div className="mb-3">
                  <label className="form-label">Exam Date</label>
                  <input
                    type="date"
                    name="examDate"
                    className="form-control"
                    required
                  />
                </div>
                <div className="mb-3">
                  <label className="form-label">Start Time</label>
                  <input
                    type="time"
                    name="startTime"
                    className="form-control"
                    required
                  />
                </div>
                <div className="mb-3">
                  <label className="form-label">End Time</label>
                  <input
                    type="time"
                    name="endTime"
                    className="form-control"
                    required
                  />
                </div>
              </div>
              <div className="modal-footer">
                <button
                  type="button"
                  className="btn btn-light"
                  data-bs-dismiss="modal"
                >
                  Close
                </button>
                <button type="submit" className="btn btn-primary">
                  Add Exam
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>
      {/* Edit Exam Modal */}
      {editingExam && (
        <div
          className="modal fade"
          id="edit_exam"
          tabIndex={-1}
          aria-labelledby="edit_examLabel"
          aria-hidden="true"
        >
          <div className="modal-dialog">
            <div className="modal-content">
              <div className="modal-header">
                <h5 className="modal-title" id="edit_examLabel">
                  Edit Exam
                </h5>
                <button
                  type="button"
                  className="btn-close"
                  data-bs-dismiss="modal"
                  aria-label="Close"
                />
              </div>
              <form onSubmit={handleSubmitEditExam}>
                <div className="modal-body">
                  <div className="mb-3">
                    <label className="form-label">Exam Name</label>
                    <input
                      type="text"
                      name="examName"
                      className="form-control"
                      defaultValue={editingExam.examName}
                      required
                    />
                  </div>
                  <div className="mb-3">
                    <label className="form-label">Exam Date</label>
                    <input
                      type="date"
                      name="examDate"
                      className="form-control"
                      defaultValue={editingExam.examDate}
                      required
                    />
                  </div>
                  <div className="mb-3">
                    <label className="form-label">Start Time</label>
                    <input
                      type="time"
                      name="startTime"
                      className="form-control"
                      defaultValue={editingExam.startTime}
                      required
                    />
                  </div>
                  <div className="mb-3">
                    <label className="form-label">End Time</label>
                    <input
                      type="time"
                      name="endTime"
                      className="form-control"
                      defaultValue={editingExam.endTime}
                      required
                    />
                  </div>
                </div>
                <div className="modal-footer">
                  <button
                    type="button"
                    className="btn btn-light"
                    data-bs-dismiss="modal"
                  >
                    Close
                  </button>
                  <button type="submit" className="btn btn-primary">
                    Save changes
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default Exam;
