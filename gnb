import React, { useRef, useState, useEffect } from "react";
import { Link } from "react-router-dom";
import Table from "../../../../core/common/dataTable/index";
import {
  examOne,
  examtwo,
  startTime,
  startTimeOne,
} from "../../../../core/common/selectoption/selectoption";
import PredefinedDateRanges from "../../../../core/common/datePicker";
import CommonSelect, { Option } from "../../../../core/common/commonSelect";
import { DatePicker } from "antd";
import dayjs from "dayjs";
import { all_routes } from "../../../router/all_routes";
import TooltipOption from "../../../../core/common/tooltipOption";

interface Exam1 {
  id: string;
  key: number;
  examName: string;
  examDate: string;
  startTime: string;
  endTime: string;
}

const Exam = () => {
  const routes = all_routes;
  const [data, setData] = useState<Exam1[]>([
    { id: "1", key: 1, examName: "Sample Exam", examDate: "01-01-2024", startTime: "10:00 AM", endTime: "12:00 PM" },
  ]);

  useEffect(() => {
    const storedExams = localStorage.getItem('exams');
    if (storedExams) {
      setData(JSON.parse(storedExams));
    }
  }, []);

  const [newExam, setNewExam] = useState({
    examName: "",
    examDate: dayjs().format("DD-MM-YYYY"),
    startTime: "",
    endTime: "",
  });

  const dropdownMenuRef = useRef<HTMLDivElement | null>(null);

  const today = new Date();
  const formattedDate = `${String(today.getMonth() + 1).padStart(2, "0")}-${String(today.getDate()).padStart(2, "0")}-${today.getFullYear()}`;
  const defaultValue = dayjs(formattedDate);

  const handleApplyClick = () => {
    if (dropdownMenuRef.current) {
      dropdownMenuRef.current.classList.remove("show");
    }
  };

  const getModalContainer = () => document.getElementById("modal-datepicker") || document.body;

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setNewExam({ ...newExam, [name]: value });
  };

  const handleAddExam = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    const examWithId: Exam1 = {
      id: String(data.length + 1),
      key: data.length + 1,
      ...newExam,
    };
    const updatedData = [...data, examWithId];
    setData(updatedData);
    localStorage.setItem('exams', JSON.stringify(updatedData));
    setNewExam({ examName: "", examDate: dayjs().format("DD-MM-YYYY"), startTime: "", endTime: "" });
  };

  const handleStartTimeChange = (option: Option | null) => {
    setNewExam({ ...newExam, startTime: option ? option.value : "" });
  };

  const handleEndTimeChange = (option: Option | null) => {
    setNewExam({ ...newExam, endTime: option ? option.value : "" });
  };

  const columns = [
    {
      title: "ID",
      dataIndex: "id",
      render: (_: any, record: { id: string }) => (
        <Link to="#" className="link-primary">
          {record.id}
        </Link>
      ),
    },
    {
      title: "Exam Name",
      dataIndex: "examName",
    },
    {
      title: "Exam Date",
      dataIndex: "examDate",
    },
    {
      title: "Start Time",
      dataIndex: "startTime",
    },
    {
      title: "End Time",
      dataIndex: "endTime",
    },
    {
      title: "Action",
      dataIndex: "action",
      render: (_: any, record: Exam1) => (
        <div className="d-flex align-items-center">
          <div className="dropdown">
            <Link
              to="#"
              className="btn btn-white btn-icon btn-sm d-flex align-items-center justify-content-center rounded-circle p-0"
              data-bs-toggle="dropdown"
            >
              <i className="ti ti-dots-vertical fs-14" />
            </Link>
            <ul className="dropdown-menu dropdown-menu-right p-3">
              <li>
                <Link
                  className="dropdown-item rounded-1"
                  to="#"
                  data-bs-toggle="modal"
                  data-bs-target="#edit_exam"
                  onClick={() => openEditModal(record)}
                >
                  <i className="ti ti-edit-circle me-2" />
                  Edit
                </Link>
              </li>
              <li>
                <Link
                  className="dropdown-item rounded-1"
                  to="#"
                  onClick={() => setSelectedExam(record)}
                  data-bs-toggle="modal"
                  data-bs-target="#delete-modal"
                >
                  <i className="ti ti-trash-x me-2" />
                  Delete
                </Link>
              </li>
            </ul>
          </div>
        </div>
      ),
    },
  ];

  const openEditModal = (exam: Exam1) => {
    setNewExam(exam);
    // Logic to open edit modal can be added here
  };

  const [selectedExam, setSelectedExam] = useState<Exam1 | null>(null);

  const handleDeleteExam = () => {
    if (selectedExam) {
      const updatedData = data.filter(exam => exam.id !== selectedExam.id);
      setData(updatedData);
      localStorage.setItem('exams', JSON.stringify(updatedData));
      setSelectedExam(null);
    }
  };

  return (
    <div>
      <div className="page-wrapper">
        <div className="content">
          <div className="d-md-flex d-block align-items-center justify-content-between mb-3">
            <div className="my-auto mb-2">
              <h3 className="page-title mb-1">Exam</h3>
              <nav>
                <ol className="breadcrumb mb-0">
                  <li className="breadcrumb-item">
                    <Link to={routes.adminDashboard}>Dashboard</Link>
                  </li>
                  <li className="breadcrumb-item">
                    <Link to="#">Academic</Link>
                  </li>
                  <li className="breadcrumb-item active" aria-current="page">
                    Exam
                  </li>
                </ol>
              </nav>
            </div>
            <div className="d-flex my-xl-auto right-content align-items-center flex-wrap">
              <TooltipOption />
              <div className="mb-2">
                <Link
                  to="#"
                  className="btn btn-primary"
                  data-bs-toggle="modal"
                  data-bs-target="#add_exam"
                >
                  <i className="ti ti-square-rounded-plus-filled me-2" />
                  Add Exam
                </Link>
              </div>
            </div>
          </div>

          <div className="card">
            <div className="card-header d-flex align-items-center justify-content-between flex-wrap pb-0">
              <h4 className="mb-3">Exam List</h4>
              <div className="d-flex align-items-center flex-wrap">
                <div className="input-icon-start mb-3 me-2 position-relative">
                  <PredefinedDateRanges />
                </div>
                <div className="dropdown mb-3 me-2">
                  <Link
                    to="#"
                    className="btn btn-outline-light bg-white dropdown-toggle"
                    data-bs-toggle="dropdown"
                    data-bs-auto-close="outside"
                  >
                    <i className="ti ti-filter me-2" />
                    Filter
                  </Link>
                  <div className="dropdown-menu drop-width" ref={dropdownMenuRef}>
                    <form>
                      <div className="d-flex align-items-center border-bottom p-3">
                        <h4>Filter</h4>
                      </div>
                      <div className="p-3 border-bottom pb-0">
                        <div className="row">
                          <div className="col-md-12">
                            <div className="mb-3">
                              <label className="form-label">Exam Name</label>
                              <CommonSelect className="select" options={examtwo} />
                            </div>
                          </div>
                          <div className="col-md-12">
                            <div className="mb-3">
                              <label className="form-label">Exam Date</label>
                              <CommonSelect className="select" options={examOne} />
                            </div>
                          </div>
                        </div>
                      </div>
                      <div className="p-3 d-flex align-items-center justify-content-end">
                        <Link to="#" className="btn btn-light me-3">
                          Reset
                        </Link>
                        <Link
                          to="#"
                          className="btn btn-primary"
                          onClick={handleApplyClick}
                        >
                          Apply
                        </Link>
                      </div>
                    </form>
                  </div>
                </div>
                <div className="dropdown mb-3">
                  <Link
                    to="#"
                    className="btn btn-outline-light bg-white dropdown-toggle"
                    data-bs-toggle="dropdown"
                    data-bs-auto-close="outside"
                  >
                    <i className="ti ti-import me-2" />
                    Import
                  </Link>
                  <div className="dropdown-menu drop-width">
                    <form>
                      <div className="p-3 d-flex align-items-center justify-content-end">
                        <Link to="#" className="btn btn-light me-3">
                          Cancel
                        </Link>
                        <Link to="#" className="btn btn-primary">
                          Import
                        </Link>
                      </div>
                    </form>
                  </div>
                </div>
              </div>
            </div>
            <div className="card-body">
              <Table columns={columns} data={data} />
            </div>
          </div>

          {/* Add Exam Modal */}
          <div className="modal fade" id="add_exam" tabIndex={-1} aria-labelledby="add_examLabel" aria-hidden="true">
            <div className="modal-dialog modal-lg">
              <div className="modal-content">
                <div className="modal-header">
                  <h5 className="modal-title" id="add_examLabel">Add Exam</h5>
                  <button type="button" className="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div className="modal-body">
                  <form onSubmit={handleAddExam}>
                    <div className="mb-3">
                      <label className="form-label">Exam Name</label>
                      <input type="text" className="form-control" name="examName" value={newExam.examName} onChange={handleInputChange} required />
                    </div>
                    <div className="mb-3">
                      <label className="form-label">Exam Date</label>
                      <DatePicker defaultValue={defaultValue} format={"DD-MM-YYYY"} onChange={(date, dateString) => setNewExam({ ...newExam, examDate: dateString })} />
                    </div>
                    <div className="mb-3">
                      <label className="form-label">Start Time</label>
                      <CommonSelect
                        options={startTime}
                        placeholder="Select Start Time"
                        onChange={handleStartTimeChange}
                        value={newExam.startTime}
                      />
                    </div>
                    <div className="mb-3">
                      <label className="form-label">End Time</label>
                      <CommonSelect
                        options={startTimeOne}
                        placeholder="Select End Time"
                        onChange={handleEndTimeChange}
                        value={newExam.endTime}
                      />
                    </div>
                    <button type="submit" className="btn btn-primary">Add Exam</button>
                  </form>
                </div>
              </div>
            </div>
          </div>

          {/* Delete Modal */}
          <div className="modal fade" id="delete-modal" tabIndex={-1} aria-labelledby="delete-modalLabel" aria-hidden="true">
            <div className="modal-dialog">
              <div className="modal-content">
                <div className="modal-header">
                  <h5 className="modal-title" id="delete-modalLabel">Delete Exam</h5>
                  <button type="button" className="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div className="modal-body">
                  Are you sure you want to delete this exam?
                </div>
                <div className="modal-footer">
                  <button type="button" className="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                  <button type="button" className="btn btn-danger" onClick={handleDeleteExam} data-bs-dismiss="modal">Delete</button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Exam;
