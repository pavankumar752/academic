const DeleteConfirmationModal = ({ isOpen, onDelete, onCancel }) => {
  return (
    <div className={`modal fade ${isOpen ? 'show' : ''}`} style={{ display: isOpen ? 'block' : 'none' }} id="delete_confirmation" tabIndex="-1">
      <div className="modal-dialog modal-dialog-centered">
        <div className="modal-content">
          <form onSubmit={onDelete}>
            <div className="modal-body text-center">
              <span className="delete-icon">
                <i className="ti ti-trash-x" />
              </span>
              <h4>Confirm Deletion</h4>
              <p>
                You want to delete all the marked items; this can't be undone once you delete.
              </p>
              <div className="d-flex justify-content-center">
                <button type="button" className="btn btn-light me-3" onClick={onCancel}>
                  Cancel
                </button>
                <button type="submit" className="btn btn-danger">
                  Yes, Delete
                </button>
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>
  );
};






const Exam = () => {
  const [selectedItems, setSelectedItems] = useState([]);
  const [isDeleteModalOpen, setDeleteModalOpen] = useState(false);

  const handleDelete = async (e) => {
    e.preventDefault();
    // Implement your deletion logic here, e.g., call an API to delete selected items
    // After successful deletion, reset selectedItems and close modal
    setSelectedItems([]);
    setDeleteModalOpen(false);
  };

  const openDeleteModal = () => {
    setDeleteModalOpen(true);
  };

  const cancelDelete = () => {
    setDeleteModalOpen(false);
  };

  return (
    <div>
      {/* Existing components */}

      <button onClick={openDeleteModal} className="btn btn-danger">
        Delete Selected
      </button>

      <DeleteConfirmationModal 
        isOpen={isDeleteModalOpen} 
        onDelete={handleDelete} 
        onCancel={cancelDelete} 
      />

      {/* Existing components */}
    </div>
  );
};
