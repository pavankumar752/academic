Compiled with problems:
Ã—
ERROR in src/feature-module/academic/examinations/exam-schedule/index.tsx:367:29
TS2322: Type 'Option | null' is not assignable to type 'string | number | readonly string[] | undefined'.
  Type 'null' is not assignable to type 'string | number | readonly string[] | undefined'.
    365 |                             className="form-control"
    366 |                             name="class"
  > 367 |                             value={formValues.class}
        |                             ^^^^^
    368 |                             onChange={handleInputChange}
    369 |                           />
    370 |                         </div>
ERROR in src/feature-module/academic/examinations/exam-schedule/index.tsx:378:29
TS2322: Type '{ className: string; options: { value: string; label: string; }[]; name: string; value: any; onChange: (selectedOption: Option | null) => void; }' is not assignable to type 'IntrinsicAttributes & SelectProps'.
  Property 'name' does not exist on type 'IntrinsicAttributes & SelectProps'.
    376 |                             className="select"
    377 |                             options={classSection}
  > 378 |                             name="section"
        |                             ^^^^
    379 |                             value={formValues.section}
    380 |                             onChange={(selectedOption) => handleInputChange("section", selectedOption)}
    381 |                           />
ERROR in src/feature-module/academic/examinations/exam-schedule/index.tsx:379:47
TS2339: Property 'section' does not exist on type 'Exam1'.
    377 |                             options={classSection}
    378 |                             name="section"
  > 379 |                             value={formValues.section}
        |                                               ^^^^^^^
    380 |                             onChange={(selectedOption) => handleInputChange("section", selectedOption)}
    381 |                           />
    382 |                         </div>
ERROR in src/feature-module/academic/examinations/exam-schedule/index.tsx:380:88
TS2554: Expected 1 arguments, but got 2.
    378 |                             name="section"
    379 |                             value={formValues.section}
  > 380 |                             onChange={(selectedOption) => handleInputChange("section", selectedOption)}
        |                                                                                        ^^^^^^^^^^^^^^
    381 |                           />
    382 |                         </div>
    383 |                       </div>
ERROR in src/feature-module/academic/examinations/exam-schedule/index.tsx:391:47
TS2339: Property 'examName' does not exist on type 'Exam1'.
    389 |                             options={examtwo}
    390 |                             name="examName"
  > 391 |                             value={formValues.examName}
        |                                               ^^^^^^^^
    392 |                             onChange={handleInputChange}
    393 |                           />
    394 |                         </div>
ERROR in src/feature-module/academic/examinations/exam-schedule/index.tsx:392:29
TS2322: Type '(e: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>) => void' is not assignable to type '(option: Option | null) => void'.
    390 |                             name="examName"
    391 |                             value={formValues.examName}
  > 392 |                             onChange={handleInputChange}
        |                             ^^^^^^^^
    393 |                           />
    394 |                         </div>
    395 |                       </div>
ERROR in src/feature-module/academic/examinations/exam-schedule/index.tsx:404:29
TS2322: Type '(e: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>) => void' is not assignable to type '(option: Option | null) => void'.
    402 |                             name="startTime"
    403 |                             value={formValues.startTime}
  > 404 |                             onChange={handleInputChange}
        |                             ^^^^^^^^
    405 |                           />
    406 |                         </div>
    407 |                       </div>
ERROR in src/feature-module/academic/examinations/exam-schedule/index.tsx:416:29
TS2322: Type '(e: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>) => void' is not assignable to type '(option: Option | null) => void'.
    414 |                             name="endTime"
    415 |                             value={formValues.endTime}
  > 416 |                             onChange={handleInputChange}
        |                             ^^^^^^^^
    417 |                           />
    418 |                         </div>
    419 |                       </div>
ERROR in src/feature-module/academic/examinations/exam-schedule/index.tsx:428:29
TS2322: Type '(e: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>) => void' is not assignable to type '(option: Option | null) => void'.
    426 |                             name="duration"
    427 |                             value={formValues.duration}
  > 428 |                             onChange={handleInputChange}
        |                             ^^^^^^^^
    429 |                           />
    430 |                         </div>
    431 |                       </div>
ERROR in src/feature-module/academic/examinations/exam-schedule/index.tsx:445:27
TS2322: Type '(e: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>) => void' is not assignable to type '(option: Option | null) => void'.
  Types of parameters 'e' and 'option' are incompatible.
    Type 'Option | null' is not assignable to type 'ChangeEvent<HTMLSelectElement | HTMLInputElement>'.
      Type 'null' is not assignable to type 'ChangeEvent<HTMLSelectElement | HTMLInputElement>'.
    443 |                           name="examDate"
    444 |                           value={formValues.examDate}
  > 445 |                           onChange={handleInputChange}
        |                           ^^^^^^^^
    446 |                         />
    447 |                       </div>
    448 |                     </div>
ERROR in src/feature-module/academic/examinations/exam-schedule/index.tsx:457:27
TS2322: Type '(e: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>) => void' is not assignable to type '(option: Option | null) => void'.
    455 |                           name="subject"
    456 |                           value={formValues.subject}
  > 457 |                           onChange={handleInputChange}
        |                           ^^^^^^^^
    458 |                         />
    459 |                       </div>
    460 |                     </div>
ERROR in src/feature-module/academic/examinations/exam-schedule/index.tsx:469:27
TS2322: Type '(e: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>) => void' is not assignable to type '(option: Option | null) => void'.
    467 |                           name="roomNo"
    468 |                           value={formValues.roomNo}
  > 469 |                           onChange={handleInputChange}
        |                           ^^^^^^^^
    470 |                         />
    471 |                       </div>
    472 |                     </div>
ERROR in src/feature-module/academic/examinations/exam-schedule/index.tsx:481:27
TS2322: Type '(e: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>) => void' is not assignable to type '(option: Option | null) => void'.
    479 |                           name="maxMarks"
    480 |                           value={formValues.maxMarks}
  > 481 |                           onChange={handleInputChange}
        |                           ^^^^^^^^
    482 |                         />
    483 |                       </div>
    484 |                     </div>
ERROR in src/feature-module/academic/examinations/exam-schedule/index.tsx:494:29
TS2322: Type '(e: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>) => void' is not assignable to type '(option: Option | null) => void'.
    492 |                             name="minMarks"
    493 |                             value={formValues.minMarks}
  > 494 |                             onChange={handleInputChange}
        |                             ^^^^^^^^
    495 |                           />
    496 |                         </div>
    497 |                       </div>
