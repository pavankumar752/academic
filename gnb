import React from 'react';
import { Link } from 'react-router-dom';

interface Grade {
  id: number;
  grade: string;
  percentage: number;
  gradePoints: number;
  status: string;
}

interface ModalProps {
  id: string;
  title: string;
  children: React.ReactNode;
}

const Modal: React.FC<ModalProps> = ({ id, title, children }) => (
  <div className="modal fade" id={id}>
    <div className="modal-dialog modal-dialog-centered">
      <div className="modal-content">
        <div className="modal-header">
          <h4 className="modal-title">{title}</h4>
          <button type="button" className="btn-close" data-bs-dismiss="modal" aria-label="Close" />
        </div>
        <div className="modal-body">{children}</div>
        <div className="modal-footer">
          <Link to="#" className="btn btn-light me-2" data-bs-dismiss="modal">Cancel</Link>
          <Link to="#" className="btn btn-danger" data-bs-dismiss="modal">Delete</Link>
        </div>
      </div>
    </div>
  </div>
);

interface FormSelectProps {
  label: string;
  options: { value: string; label: string }[];
}

const FormSelect: React.FC<FormSelectProps> = ({ label, options }) => (
  <div className="mb-3">
    <label className="form-label">{label}</label>
    <CommonSelect className="select" options={options} />
  </div>
);

const Grade: React.FC = () => {
  const grades: Grade[] = []; // Assume this is populated with your grade data

  const columns = [
    { title: "ID", dataIndex: "id", render: (text: string, record: Grade) => <Link to="#" className="link-primary">{record.id}</Link>, sorter: (a: Grade, b: Grade) => a.id - b.id },
    { title: "Grade", dataIndex: "grade", sorter: (a: Grade, b: Grade) => a.grade.localeCompare(b.grade) },
    { title: "Percentage", dataIndex: "percentage", sorter: (a: Grade, b: Grade) => a.percentage - b.percentage },
    { title: "Grade Points", dataIndex: "gradePoints", sorter: (a: Grade, b: Grade) => a.gradePoints - b.gradePoints },
    { title: "Status", dataIndex: "status", render: () => <span className="badge badge-soft-success"><i className="ti ti-circle-filled fs-5 me-1" />Active</span>, sorter: (a: Grade, b: Grade) => a.status.localeCompare(b.status) },
    { title: "Action", dataIndex: "action", render: () => (
      <div className="d-flex align-items-center">
        <div className="dropdown">
          {/* Dropdown for actions */}
        </div>
      </div>
    )}
  ];

  return (
    <div>
      {/* Your table and other components using columns here */}
    </div>
  );
};

export default Grade;
