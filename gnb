import React, { FormEvent, useEffect, useState } from "react";
import ImageWithBasePath from "../../../core/common/imageWithBasePath";
import { Link, useNavigate } from "react-router-dom";
import { all_routes } from "../../router/all_routes";
import Cookies from 'js-cookie';
import Toast from "react-bootstrap/Toast";
import { Button } from "antd";

const Login = () => {
  const routes = all_routes;
  const [isPasswordVisible, setPasswordVisible] = useState(false);
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");
  const [showToast, setShowToast] = useState(false); // State for toast visibility
  const navigate = useNavigate();

  const togglePasswordVisibility = () => {
    setPasswordVisible((prevState) => !prevState);
  };

  useEffect(() => {
    localStorage.setItem("menuOpened", "Dashboard");
  }, []);

  const handleSubmit = async (e: FormEvent) => {
    e.preventDefault();
    try {
      const response = await fetch("http://10.10.8.14:8008/login/", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ username, password }),
      });
      if (!response.ok) {
        throw new Error("Invalid email or password");
      }
      const data = await response.json();
      Cookies.set("authToken", data.access, { expires: 7 }); // Expires in 7 days
      setShowToast(true); // Show toast on successful login
      navigate(routes.adminDashboard); // Redirect on success
    } catch (err) {
      // Handle error here (optional: display a different toast for errors)
    }
  };

  return (
    <div className="container-fluid">
      <div className="w-100 overflow-hidden position-relative flex-wrap d-block vh-100">
        <div className="row">
          <div className="col-lg-6"></div>
          <div className="col-lg-6 col-md-12 col-sm-12">
            <div className="row justify-content-center align-items-center vh-100 overflow-auto flex-wrap">
              <div className="col-md-8 mx-auto p-4">
                <form onSubmit={handleSubmit}>
                  <div>
                    <div className="mx-auto mb-5 text-center">
                      <h1>Sri Chaitanya</h1>
                    </div>
                    <div className="card">
                      <div className="card-body pb-3">
                        <div className="mb-4">
                          <h2 className="mb-2">Welcome</h2>
                          <p className="mb-0">Please enter your details to sign in</p>
                        </div>
                        <div className="mb-3">
                          <label className="form-label">Email Address</label>
                          <div className="input-icon mb-3 position-relative">
                            <span className="input-icon-addon">
                              <i className="ti ti-mail" />
                            </span>
                            <input
                              type="text"
                              className="form-control"
                              value={username}
                              onChange={(e) => setUsername(e.target.value)}
                              required
                            />
                          </div>
                          <label className="form-label">Password</label>
                          <div className="pass-group">
                            <input
                              type={isPasswordVisible ? "text" : "password"}
                              className="pass-input form-control"
                              value={password}
                              onChange={(e) => setPassword(e.target.value)}
                              required
                            />
                            <span
                              className={`ti toggle-password ${isPasswordVisible ? "ti-eye" : "ti-eye-off"}`}
                              onClick={togglePasswordVisibility}
                            />
                          </div>
                        </div>
                        <div className="form-wrap form-wrap-checkbox">
                          <div className="d-flex align-items-center">
                            <div className="form-check form-check-md mb-0">
                              <input className="form-check-input mt-0" type="checkbox" />
                            </div>
                            <p className="ms-1 mb-0">Remember Me</p>
                          </div>
                        </div>
                      </div>
                      <div className="p-4 pt-0">
                        <div className="mb-3">
                          <button type="submit" className="btn btn-primary w-100">
                            Sign In
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                </form>
                <Toast 
                  onClose={() => setShowToast(false)} 
                  show={showToast} 
                  delay={3000} 
                  autohide
                  className="position-fixed bottom-0 end-0 m-3"
                >
                  <Toast.Body>Login successful!</Toast.Body>
                </Toast>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Login;
