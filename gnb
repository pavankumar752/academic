<form onSubmit={handleSubmit}>
  <div className="modal-body">
    <div className="row">
      <div className="col-md-12">
        <div className="mb-3">
          <label className="form-label">Exam Name</label>
          <input type="text" className="form-control" onChange={handleChange} value={newExam.examName} name="examName" required />
        </div>
        <div className="mb-3">
          <label className="form-label">Exam Date</label>
          <div className="date-pic">
            <DatePicker
              className="form-control datetimepicker"
              format={{
                format: "DD-MM-YYYY",
                type: "mask",
              }}
              name="examDate"
              onChange={handleDateChange}
              value={newExam.examDate ? dayjs(newExam.examDate, "DD-MM-YYYY") : null}
              getPopupContainer={getModalContainer}
              placeholder="16 May 2024"
              required
            />
            <span className="cal-icon">
              <i className="ti ti-calendar" />
            </span>
          </div>
        </div>
        <div className="mb-3">
          <label className="form-label">Start Time</label>
          <CommonSelect className="select" options={startTime} onChange={(option) => handleSelectChange(option, "startTime")} value={startTime.find((option) => option.label === newExam.startTime)} required />
        </div>
        <div className="mb-0">
          <label className="form-label">End Time</label>
          <CommonSelect
            className="select"
            options={startTimeOne}
            onChange={(option) => handleSelectChange(option, "endTime")}
            value={startTimeOne.find((option) => option.label === newExam.endTime)}
            required
          />
        </div>
      </div>
    </div>
  </div>
  <div className="modal-footer">
    <Link
      to="#"
      className="btn btn-light me-2"
      data-bs-dismiss="modal"
    >
      Cancel
    </Link>
    <button type="submit" className="btn btn-primary" data-bs-dismiss="modal">
      Add Exam
    </button>
  </div>
</form>





const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
  e.preventDefault();

  // Check if all required fields are filled
  if (!newExam.examName || !newExam.examDate || !newExam.startTime || !newExam.endTime) {
    alert("Please fill in all fields");
    return;
  }

  const updatedExams = editingIndex !== null
    ? exams.map((exam, index) => 
        index === editingIndex 
        ? { ...newExam, id: exam.id, key: exam.key } // Retain original key when editing
        : exam
      )
    : [...exams, { ...newExam, id: (exams.length + 1).toString(), key: exams.length + 1 }]; // Generate ID and key for new exams

  setExams(updatedExams);
  closeModal();
};
