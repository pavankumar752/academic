import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import DatePicker from 'react-datepicker'; // Ensure you have the correct import
import CommonSelect from './CommonSelect'; // Adjust the import as necessary
import 'react-datepicker/dist/react-datepicker.css'; // Import the CSS for DatePicker

const Exam = () => {
  // State to hold exams
  const [exams, setExams] = useState([]);
  const [examDetails, setExamDetails] = useState({
    name: '',
    date: null,
    startTime: '',
    endTime: '',
  });
  
  const [isEditing, setIsEditing] = useState(false);
  const [editIndex, setEditIndex] = useState(null);

  // Function to handle adding an exam
  const handleAddExam = (e) => {
    e.preventDefault();
    
    if (isEditing) {
      // Update existing exam
      const updatedExams = [...exams];
      updatedExams[editIndex] = examDetails;
      setExams(updatedExams);
      setIsEditing(false);
      setEditIndex(null);
    } else {
      // Add new exam
      setExams([...exams, examDetails]);
    }

    // Reset form
    setExamDetails({ name: '', date: null, startTime: '', endTime: '' });
    // Close modal can be done here if using refs to control modals
  };

  // Function to handle input changes
  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setExamDetails({ ...examDetails, [name]: value });
  };

  const handleDateChange = (date) => {
    setExamDetails({ ...examDetails, date });
  };

  // Function to start editing an exam
  const handleEditExam = (index) => {
    setExamDetails(exams[index]);
    setIsEditing(true);
    setEditIndex(index);
  };

  // Function to delete an exam
  const handleDeleteExam = (index) => {
    const updatedExams = exams.filter((_, i) => i !== index);
    setExams(updatedExams);
  };

  return (
    <div>
      {/* Add Exam Modal */}
      <div className="modal fade" id="add_exam">
        <div className="modal-dialog modal-dialog-centered">
          <div className="modal-content">
            <div className="modal-header">
              <h4 className="modal-title">{isEditing ? 'Edit Exam' : 'Add Exam'}</h4>
              <button
                type="button"
                className="btn-close custom-btn-close"
                data-bs-dismiss="modal"
                aria-label="Close"
              >
                <i className="ti ti-x" />
              </button>
            </div>
            <form onSubmit={handleAddExam}>
              <div className="modal-body">
                <div className="row">
                  <div className="col-md-12">
                    <div className="mb-3">
                      <label className="form-label">Exam Name</label>
                      <input
                        type="text"
                        className="form-control"
                        name="name"
                        value={examDetails.name}
                        onChange={handleInputChange}
                        required
                      />
                    </div>
                    <div className="mb-3">
                      <label className="form-label">Exam Date</label>
                      <div className="date-pic">
                        <DatePicker
                          className="form-control datetimepicker"
                          format={"DD-MM-YYYY"}
                          selected={examDetails.date}
                          onChange={handleDateChange}
                          placeholderText="16 May 2024"
                          required
                        />
                        <span className="cal-icon">
                          <i className="ti ti-calendar" />
                        </span>
                      </div>
                    </div>
                    <div className="mb-3">
                      <label className="form-label">Start Time</label>
                      <CommonSelect
                        className="select"
                        options={startTime} // Make sure startTime has appropriate values
                        onChange={(option) => setExamDetails({ ...examDetails, startTime: option.value })}
                        value={examDetails.startTime}
                      />
                    </div>
                    <div className="mb-0">
                      <label className="form-label">End Time</label>
                      <CommonSelect
                        className="select"
                        options={startTimeOne} // Make sure startTimeOne has appropriate values
                        onChange={(option) => setExamDetails({ ...examDetails, endTime: option.value })}
                        value={examDetails.endTime}
                      />
                    </div>
                  </div>
                </div>
              </div>
              <div className="modal-footer">
                <Link to="#" className="btn btn-light me-2" data-bs-dismiss="modal">
                  Cancel
                </Link>
                <button type="submit" className="btn btn-primary">
                  {isEditing ? 'Edit Exam' : 'Add Exam'}
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>

      {/* Display Exams */}
      <div>
        <h3>Exams List</h3>
        <ul>
          {exams.map((exam, index) => (
            <li key={index}>
              {exam.name} - {exam.date ? exam.date.toLocaleDateString() : ''} - {exam.startTime} to {exam.endTime}
              <button onClick={() => handleEditExam(index)} className="btn btn-warning btn-sm ms-2">
                Edit
              </button>
              <button onClick={() => handleDeleteExam(index)} className="btn btn-danger btn-sm ms-2">
                Delete
              </button>
            </li>
          ))}
        </ul>
      </div>

      {/* Modal for Delete Confirmation */}
      <div className="modal fade" id="delete-modal">
        <div className="modal-dialog modal-dialog-centered">
          <div className="modal-content">
            <div className="modal-body text-center">
              <i className="ti ti-trash-x fs-50 my-3 text-danger" />
              <h4>Are you sure you want to delete this exam?</h4>
              <div className="d-flex justify-content-center">
                <Link className="btn btn-light me-3" to="#" data-bs-dismiss="modal">
                  Cancel
                </Link>
                <Link className="btn btn-primary" to="#" data-bs-dismiss="modal">
                  Delete
                </Link>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Exam;
