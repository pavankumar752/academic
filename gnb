import React from 'react';
import { Formik, Form, Field, ErrorMessage } from 'formik';
import * as Yup from 'yup';
import { Link } from 'react-router-dom';
import CommonSelect from './CommonSelect'; // Make sure this path is correct

// Sample data for class sections and exam names
const classSection = [
  { value: 'A', label: 'Class A' },
  { value: 'B', label: 'Class B' },
  // Add more sections as needed
];

const examtwo = [
  { value: 'Math', label: 'Mathematics' },
  { value: 'Science', label: 'Science' },
  // Add more exam names as needed
];

// Type definitions for the ExamForm component props
interface ExamFormProps {
  onSubmit: (values: any) => void;
  initialValues: {
    class: string;
    section: string;
    examName: string;
    startTime: string;
    endTime: string;
    duration: string;
  };
}

const ExamForm: React.FC<ExamFormProps> = ({ onSubmit, initialValues }) => {
  const validationSchema = Yup.object().shape({
    class: Yup.string().required('Class is required'),
    section: Yup.string().required('Section is required'), // Added validation for section
    examName: Yup.string().required('Exam name is required'),
    startTime: Yup.string().required('Start time is required'),
    endTime: Yup.string().required('End time is required'),
    duration: Yup.number().required('Duration is required').positive().integer(),
  });

  return (
    <Formik
      initialValues={initialValues}
      validationSchema={validationSchema}
      onSubmit={onSubmit}
    >
      {() => (
        <Form>
          <div className="modal-body">
            <div className="row">
              <div className="col-md-12">
                <div className="row">
                  {['class', 'section', 'examName', 'startTime', 'endTime', 'duration'].map((field, index) => (
                    <div className="col-md-4" key={index}>
                      <div className="mb-3">
                        <label className="form-label">
                          {field.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}
                        </label>
                        <Field
                          name={field}
                          as={field === 'section' || field === 'examName' ? CommonSelect : 'input'}
                          className="form-control"
                          options={field === 'section' ? classSection : field === 'examName' ? examtwo : undefined}
                        />
                        <ErrorMessage name={field} component="div" className="text-danger" />
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
          <div className="modal-footer">
            <Link to="#" className="btn btn-light me-2" data-bs-dismiss="modal">Cancel</Link>
            <button type="submit" className="btn btn-primary">Add Exam Schedule</button>
          </div>
        </Form>
      )}
    </Formik>
  );
};

const ExamSchedule: React.FC = () => {
  const initialValues = {
    class: '',
    section: '',
    examName: '',
    startTime: '',
    endTime: '',
    duration: '',
  };

  const handleAddExamSchedule = (values: any) => {
    console.log('Exam Schedule Added:', values);
    // Handle submission logic here
  };

  return (
    <div>
      {/* Modal for adding exam schedule */}
      <div className="modal fade" id="add_exam_schedule">
        <div className="modal-dialog modal-dialog-centered modal-xl">
          <div className="modal-content">
            <div className="modal-header">
              <h4 className="modal-title">Add Exam Schedule</h4>
              <button type="button" className="btn-close custom-btn-close" data-bs-dismiss="modal" aria-label="Close">
                <i className="ti ti-x" />
              </button>
            </div>
            <ExamForm onSubmit={handleAddExamSchedule} initialValues={initialValues} />
          </div>
        </div>
      </div>
    </div>
  );
};

export default ExamSchedule;
