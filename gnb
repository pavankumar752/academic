const createColumn = (title: string, dataIndex: string, isLink = false) => ({
  title,
  dataIndex,
  render: (text: string, record: any) => (
    isLink ? (
      <Link to="#" className="link-primary">{record[dataIndex]}</Link>
    ) : (
      text
    )
  ),
  sorter: (a: TableData, b: TableData) => a[dataIndex].length - b[dataIndex].length,
});

const columns = [
  createColumn("Subject", "subject", true),
  createColumn("Exam Date", "examDate"),
  createColumn("Start Time", "startTime"),
  createColumn("End Time", "endTime"),
  createColumn("Duration", "duration"),
  createColumn("Room No", "roomNo"),
  createColumn("Max Mark", "maxMarks"),
  createColumn("Min Mark", "minMarks"),
  {
    title: "Action",
    dataIndex: "action",
    render: () => (
      <div className="d-flex align-items-center">
        <div className="dropdown">
          <Link
            to="#"
            className="btn btn-white btn-icon btn-sm d-flex align-items-center justify-content-center rounded-circle p-0"
            data-bs-toggle="dropdown"
            aria-expanded="false"
          >
            <i className="ti ti-dots-vertical fs-14" />
          </Link>
          <ul className="dropdown-menu dropdown-menu-right p-3">
            {[
              { label: "Edit", icon: "ti-edit-circle", target: "#edit_exam_schedule" },
              { label: "Delete", icon: "ti-trash-x", target: "#delete-modal" },
            ].map(({ label, icon, target }) => (
              <li key={label}>
                <Link
                  className="dropdown-item rounded-1"
                  to="#"
                  data-bs-toggle="modal"
                  data-bs-target={target}
                >
                  <i className={`${icon} me-2`} />
                  {label}
                </Link>
              </li>
            ))}
          </ul>
        </div>
      </div>
    ),
  },
];
